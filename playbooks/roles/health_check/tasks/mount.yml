# mount
---
- name: Run mount -l
  ansible.builtin.command: mount -l
  register: mount_l
  changed_when: false

- name: Set mount_list
  ansible.builtin.set_fact:
    mount_list: '{{ mount_l.stdout_lines | map("split") | map(attribute=2) }}'

- name: Check web dir
  ansible.builtin.assert:
    that: web_dir in mount_list
    msg: '{{ web_dir }} not mounted'
    quiet: true
  when: group_names | intersect(["mgt", "bk", "app", "web"]) | length > 0

- name: Check user dir
  ansible.builtin.assert:
    that: mount_list | select("match", "^" ~ web_dir ~ "/\w+" ~ item ~ "$") | count > 0
    msg: 'user {{ item }} not mounted'
    quiet: true
  when: group_names | intersect(["mgt", "app"]) | length > 0
  loop:
    - /etc
    - /opt
    - /srv
    - /usr
    - /dev
    - /proc
    - /run
    - /tmp
    - /sys

- name: Check user dir for mgt
  ansible.builtin.assert:
    that: mount_list | select("match", "^" ~ web_dir ~ "/\w+" ~ item ~ "$") | count > 0
    msg: 'user {{ item }} not mounted'
    quiet: true
  when: '"mgt" in group_names'
  loop:
    - /dev/pts

- name: Check user dir for app
  ansible.builtin.assert:
    that: mount_list | select("match", "^" ~ web_dir ~ "/\w+" ~ item ~ "$") | count > 0
    msg: 'user {{ item }} not mounted'
    quiet: true
  when: '"app" in group_names'
  loop:
    - '{{ web_var_dir }}/\w+'
