# python
# EL9ではpythonやpython3を3.xに向けることはできない
# https://access.redhat.com/documentation/ja-jp/red_hat_enterprise_linux/9/html-single/installing_and_using_dynamic_programming_languages/index#proc_installing-python-3_assembly_installing-and-using-python
---
- name: Set python default
  ansible.builtin.set_fact:
    sv_app_python_defalut: '{{ sv_app_default_versions["el" ~ ansible_distribution_major_version].default.python }}'

- name: Set python version
  ansible.builtin.set_fact:
    sv_app_python_versions: '{{ sv_app_versions.python | default([sv_app_python_defalut]) }}'

- name: Set python pkg_versions to empty
  ansible.builtin.set_fact:
    sv_app_python_pkg_versions: []

- name: Collect python pkg_versinos
  ansible.builtin.set_fact:
    sv_app_python_pkg_versions: >-
      {{ sv_app_python_pkg_versions + [
        item is version(sv_app_python_defalut) | ternary("3",
        item is version("3.10", "<")           | ternary(item | regex_replace("\.", ""),
                                                 item))] }}
  loop: '{{ sv_app_python_versions }}'

- name: Install python
  ansible.builtin.dnf:
    state: present
    name:
      - 'python{{ item }}'
      - 'python{{ item }}-devel'
      - 'python{{ item }}-pip'
      - 'python{{ item }}-PyMySQL'
      - 'python{{ item }}-psycopg2'
  loop: '{{ sv_app_python_pkg_versions }}'

- name: Select python for EL8
  community.general.alternatives:
    name: python
    path: '/usr/bin/python{{ (sv_app_python_versions | first)[0] }}'
  when: ansible_distribution_major_version == '8'

- name: Select python3 for EL8
  community.general.alternatives:
    name: python3
    path: '/usr/bin/python{{ sv_app_python_versions | first }}'
  when: ansible_distribution_major_version == "8"
