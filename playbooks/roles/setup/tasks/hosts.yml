# hosts
---
- name: Set setup_hosts is emtpy
  ansible.builtin.set_fact:
    setup_hosts: []

- name: Set host in hosts
  ansible.builtin.set_fact:
    setup_hosts: >-
      {{
        setup_hosts + [{
          "hostname": hostvars[item].inventory_hostname_short,
          "fqdn": (hostvars[item].inventory_hostname_short == hostvars[item].inventory_hostname)
            | ternary(hostvars[item].inventory_hostname ~ "." ~ server_domain, hostvars[item].inventory_hostname),
          "ipv4": hostvars[item].ansible_host | default("") is ansible.utils.ipv4_address
            | ternary(hostvars[item].ansible_host | default(""), hostvars[item].inventory_ipv4 | default("")),
          "ipv6": hostvars[item].ansible_host | default("") is ansible.utils.ipv6_address
            | ternary(hostvars[item].ansible_host | default(""), hostvars[item].inventory_ipv6 | default(""))
        }]
      }}
  loop: '{{ groups["all"] }}'

- name: Bolck in hosts
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: |
      {% for item in setup_hosts %}
      {% if item.ipv4 != "" %}
      {{ item.ipv4 }} {{ item.hostname }} {{ item.fqdn }}
      {% endif %}
      {% if item.ipv6 != "" %}
      {{ item.ipv6 }} {{ item.hostname }} {{ item.fqdn }}
      {% endif %}
      {% endfor %}

- name: Bolck in hosts for additional
  ansible.builtin.blockinfile:
    path: /etc/hosts
    marker: '# {mark} ANSIBLE MANAGED BLOCK additional'
    state: '{{ additional_hosts is defined | ternary("present", "absent") }}'
    block: '{{ additional_hosts | default("") }}'
