# health check gluster
---
- name: Run gluster pool list
  become: true
  ansible.builtin.command: /usr/sbin/gluster pool list
  register: gluster_pool_list
  changed_when: false

- name: Run gluster volume status
  become: true
  ansible.builtin.command:
    argv:
      - /usr/sbin/gluster
      - volume
      - status
      - '{{ gluster_volume }}'
  register: gluster_volume_status
  changed_when: false

- name: Gather self-heal
  become: true
  gluster.gluster.gluster_heal_info:
    name: '{{ gluster_volume }}'
    status_filter: self-heal
  register: gluster_self_heal_status

- name: Check gluster pool list
  ansible.builtin.assert:
    that: gluster_pool_list.stdout_lines | select("match", "^[\da-f\-]+\s+" ~ item ~ "\s+Connected\s*$") | length == 1
    msg: 'gluster dose not connetct to {{ item }}'
    quiet: true
  loop: '{{ groups["fs"] | reject("eq", inventory_hostname) + ["localhost"] }}'

- name: Check gluster volume status brick
  ansible.builtin.assert:
    that: >-
      gluster_volume_status.stdout_lines | select("match",
        "^Brick " ~ item ~ ":" ~ gluster_data_dir ~ "/" ~ gluster_volume ~ "\s+\d+\s+\d+\s+Y\s+\d+\s*$") | length == 1
    msg: 'gluster no brick {{ item }}'
    quiet: true
  loop: '{{ groups["fs"] }}'

- name: Check gluster volume status snapshot and self-heal
  ansible.builtin.assert:
    that: >-
      gluster_volume_status.stdout_lines | select("match",
        "^(Snapshot|Self-heal) Daemon on " ~ item ~ "\s+(\d+|N/A)\s+(\d+|N/A)\s+Y\s+\d+\s*$") | length == 2
    msg: 'gluster no brick {{ item }}'
    quiet: true
  loop: '{{ groups["fs"] | reject("eq", inventory_hostname) + ["localhost"] }}'

- name: Check gluster self heal
  ansible.builtin.assert:
    that: gluster_self_heal_status.glusterfs.heal_info | selectattr("no_of_entries", "ne", "0") | length == 0
    msg: 'heal entries exists'
    quiet: true
