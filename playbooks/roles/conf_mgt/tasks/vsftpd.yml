# vsftpd
---
- name: Install vsftpd
  ansible.builtin.dnf:
    state: present
    name: vsftpd

- name: Set seboolean for vsftpd
  ansible.posix.seboolean:
    name: '{{ item }}'
    state: true
    persistent: true
  loop:
    - ftpd_use_fusefs

- name: Line in vsftpd.conf
  ansible.builtin.lineinfile:
    path: /etc/vsftpd/vsftpd.conf
    regexp: '^#?{{ item.key }}='
    line: >-
      {{ item.key }}={{ item.value is boolean | ternary(
        item.value | ternary("YES", "NO"),
        item.value | string) }}
  notify: 'restart vsftpd'
  with_dict:
    xferlog_std_format: true
    ftpd_banner: '{{ ftp_banner }}'
    ascii_upload_enable: true
    ascii_download_enable: true
    ls_recurse_enable: true
    use_localtime: true
    force_dot_files: true
    deny_file: '{/bin*,/dev*,/etc*,/lib*,/lib64*,/opt*,/proc*,/run*,/sbin*,/srv*,/sys*,/usr*}'
    hide_file: '{/bin*,/dev*,/etc*,/lib*,/lib64*,/opt*,/proc*,/run*,/sbin*,/srv*,/sys*,/usr*}'
    # chroot
    chroot_local_user: true
    user_sub_token: $USER
    local_root: '{{ web_dir }}/$USER'

- name: Block ssl in vsftpd
  ansible.builtin.blockinfile:
    path: /etc/vsftpd/vsftpd.conf
    marker: '# {mark} ANSIBLE MANAGED BLOCK ssl'
    state: '{{ ftp_ssl | ternary("present", "absent") }}'
    block: |
      ssl_enable=YES
      rsa_cert_file={{ mgt_tls_cert }}
      rsa_private_key_file={{ mgt_tls_key }}
      {% if ftp_ssl_versions is defined %}
      {% if "SSLv2" in ftp_ssl_versions %}
      ssl_sslv2=YES
      {% endif%}
      {% if "SSLv3" in ftp_ssl_versions %}
      ssl_sslv3=YES
      {% endif%}
      {% if "TLSv1" in ftp_ssl_versions %}
      ssl_tlsv1=YES
      {% endif%}
      {% if "TLSv1.1" in ftp_ssl_versions %}
      ssl_tlsv1_1=YES
      {% endif%}
      {% if "TLSv1.2" not in ftp_ssl_versions %}
      ssl_tlsv1_2=NO
      {% endif%}
      {% if "TLSv1.3" not in ftp_ssl_versions %}
      ssl_tlsv1_3=NO
      {% endif%}
      {% endif%}
      {% if ftp_ssl_mode == "implicit" %}
      implicit_ssl=YES
      listen_port=990
      {% endif %}
      {% if not ftp_ssl_only %}
      force_local_data_ssl=NO
      force_local_logins_ssl=NO
      {% endif %}
      strict_ssl_read_eof=NO
  notify: 'restart vsftpd'

- name: Block pasv port in vsftpd
  ansible.builtin.blockinfile:
    path: /etc/vsftpd/vsftpd.conf
    marker: '# {mark} ANSIBLE MANAGED BLOCK pasv port'
    state: '{{ ftp_pasv_port_range is defined | ternary("present", "absent") }}'
    block: |
      pasv_min_port={{ (ftp_pasv_port_range | default([0, 0]))[0] }}
      pasv_max_port={{ (ftp_pasv_port_range | default([0, 0]))[1] }}
  notify: 'restart vsftpd'

- name: Enable and start vsftpd
  ansible.builtin.systemd:
    name: vsftpd.service
    enabled: true
    state: started

- name: Set ftp service in firewalld
  ansible.posix.firewalld:
    state: enabled
    service: ftp
    permanent: true
  notify: 'reload firewalld'

- name: Set ftp pasv port in firewalld
  ansible.posix.firewalld:
    state: enabled
    port: '{{ ftp_pasv_port_range[0] }}-{{ ftp_pasv_port_range[1] }}/tcp'
    permanent: true
  when: ftp_pasv_port_range is defined
  notify: 'reload firewalld'
